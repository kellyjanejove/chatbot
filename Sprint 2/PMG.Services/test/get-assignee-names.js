'use strict';

// tests for get-assignee-names
// Generated by serverless-mocha-plugin

const dataInitializer = require('./initializers/assigneeNamesInitializer.js');
const mod = require('../assignee/get-assignee-names.js');
const mochaPlugin = require('serverless-mocha-plugin');

const lambdaWrapper = mochaPlugin.lambdaWrapper;
const expect = mochaPlugin.chai.expect;
const wrapped = lambdaWrapper.wrap(mod, {
  handler: 'handler'
});

describe('get-assignee-names', () => {
  //  lambdaWrapper.init(liveFunction); // Run the deployed lambda
  var assigneeNameList = [];
  before((done) => {
    //  lambdaWrapper.init(liveFunction); // Rmochaun the deployed lambda
    dataInitializer.seed().then(function (assigneeNames) {
      assigneeNameList = assigneeNames;
      done();
    });
  })

  it('it should return a list', () => {
    return wrapped.run({}).then((response) => {
      let results = JSON.parse(response.body);
      expect(results.length).to.be.above(0);
    });
  });

  it('it should return complete names', () => {
    return wrapped.run({}).then((response) => {
      let results = JSON.parse(response.body);
      expect(results[0].FullName).to.be.equal(assigneeNameList[0].LastNm + ', ' + assigneeNameList[0].FirstNm + ' ' + assigneeNameList[0].MiddleNm + ' - ' + assigneeNameList[0].AssigneePersonnelNbr);
    });
  });



  it('it should contains parameter', () => {
    return wrapped.run({
      queryStringParameters: {
        value: 'And'
      }
    }).then((response) => {
      console.log(response);
      let results = JSON.parse(response.body);
      console.log(results);
      expect(results[0].FullName).to.include('And');
    });
  });
});